{"ast":null,"code":"var _jsxFileName = \"D:\\\\project2\\\\project2\\\\app\\\\src\\\\component\\\\admin\\\\FormUsers.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { Form, Row, col, Button } from 'react-bootstrap';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { API_GET, API_POST } from '../../api';\nimport Adminnav from './Adminnav';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function FormUsers() {\n  _s();\n\n  let params = useParams();\n  let navigate = useNavigate();\n  const [user_name, setUsername] = useState(\"\");\n  const [user_pwd, setUserpwd] = useState(\"\");\n  const [role_id, setRoleid] = useState(\"\");\n  const [role_name, setRolename] = useState(\"\");\n  const [validated, setValidated] = useState(false);\n\n  const onsave = async event => {\n    const form = event.currentTarget;\n    event.preventDefault();\n\n    if (form.checkValidity() === false) {\n      event.stopPropagation();\n    } else {\n      if (params.user_id === \"add\") {\n        doCreateUser();\n      } else {\n        doUpdateUser();\n      }\n    }\n  };\n\n  const doCreateUser = async () => {\n    const json = await API_POST(\"formUsers/add\", {\n      user_name: user_name,\n      user_pwd: user_pwd,\n      role_name: role_name\n    });\n\n    if (json.result) {\n      navigate(\"/Admin\", {\n        replace: true\n      });\n    }\n  };\n\n  const doUpdateUser = async () => {\n    console.log(\"อัปเดทสำเร็จ\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-fluid bg-danger\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-lg-2 content\",\n          style: {\n            padding: \"0\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Adminnav, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-lg-10 content\",\n          style: {\n            background: \"#FEA4B0\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 89\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: /*#__PURE__*/_jsxDEV(\"center\", {\n              children: \"\\u0E08\\u0E31\\u0E14\\u0E01\\u0E32\\u0E23\\u0E02\\u0E49\\u0E2D\\u0E21\\u0E39\\u0E25\\u0E1C\\u0E39\\u0E49\\u0E43\\u0E0A\\u0E49\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 73\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form, {\n            className: \"container\",\n            noValidate: true,\n            validated: validated,\n            onSubmit: onsave,\n            children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"validateUsername\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"\\u0E0A\\u0E37\\u0E48\\u0E2D\\u0E1C\\u0E39\\u0E49\\u0E43\\u0E0A\\u0E49\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                value: user_name,\n                placeholder: \"\\u0E0A\\u0E37\\u0E48\\u0E2D\\u0E1C\\u0E39\\u0E49\\u0E43\\u0E0A\\u0E49\",\n                required: true,\n                onChange: e => setUsername(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                type: \"invalid\",\n                children: \"\\u0E01\\u0E23\\u0E38\\u0E13\\u0E32\\u0E01\\u0E23\\u0E2D\\u0E01\\u0E0A\\u0E37\\u0E48\\u0E2D\\u0E1C\\u0E39\\u0E49\\u0E43\\u0E0A\\u0E49\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"validateUserpwd\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"\\u0E23\\u0E2B\\u0E31\\u0E2A\\u0E1C\\u0E48\\u0E32\\u0E19\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                value: user_pwd,\n                placeholder: \"\\u0E23\\u0E2B\\u0E31\\u0E2A\\u0E1C\\u0E48\\u0E32\\u0E19\",\n                required: true,\n                onChange: e => setUserpwd(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                type: \"invalid\",\n                children: \"\\u0E01\\u0E23\\u0E38\\u0E13\\u0E32\\u0E01\\u0E23\\u0E2D\\u0E01\\u0E23\\u0E2B\\u0E31\\u0E2A\\u0E1C\\u0E48\\u0E32\\u0E19\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"validateRolename\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"\\u0E15\\u0E33\\u0E41\\u0E2B\\u0E19\\u0E48\\u0E07\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                value: role_name,\n                placeholder: \"\\u0E1C\\u0E39\\u0E49\\u0E43\\u0E0A\\u0E49\",\n                required: true,\n                onChange: e => setRolename(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                type: \"invalid\",\n                children: \"\\u0E01\\u0E23\\u0E38\\u0E13\\u0E32\\u0E01\\u0E23\\u0E2D\\u0E01\\u0E0A\\u0E37\\u0E48\\u0E2D\\u0E1C\\u0E39\\u0E49\\u0E43\\u0E0A\\u0E49\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Row, {\n              className: \"p-3\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"success\",\n                as: \"input\",\n                type: \"submit\",\n                value: \"SAVE\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"navigate\", {\n              to: \"Admin\",\n              replace: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(FormUsers, \"ge7z1ykyXWKrKeieUHmesTDrdNM=\", false, function () {\n  return [useParams, useNavigate];\n});\n\n_c = FormUsers;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormUsers\");","map":{"version":3,"names":["useState","Form","Row","col","Button","useNavigate","useParams","API_GET","API_POST","Adminnav","FormUsers","params","navigate","user_name","setUsername","user_pwd","setUserpwd","role_id","setRoleid","role_name","setRolename","validated","setValidated","onsave","event","form","currentTarget","preventDefault","checkValidity","stopPropagation","user_id","doCreateUser","doUpdateUser","json","result","replace","console","log","padding","background","e","target","value"],"sources":["D:/project2/project2/app/src/component/admin/FormUsers.js"],"sourcesContent":["import { useState } from 'react';\r\nimport{Form,Row,col,Button} from 'react-bootstrap';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport { API_GET,API_POST } from '../../api';\r\nimport Adminnav from './Adminnav';\r\n\r\n\r\n\r\nexport default function FormUsers (){\r\n\r\n    let params = useParams();\r\n    let navigate = useNavigate();\r\n    \r\n    \r\n    const [user_name,setUsername] = useState(\"\");\r\n    const [user_pwd,setUserpwd] = useState(\"\");\r\n    const [role_id,setRoleid] = useState(\"\");\r\n    const [role_name,setRolename] = useState(\"\");\r\n\r\n    const [validated,setValidated] = useState(false);\r\n\r\n    const onsave = async (event)=>{\r\n        const form = event.currentTarget;\r\n        event.preventDefault();\r\n        if(form.checkValidity()===false){\r\n            event.stopPropagation();\r\n        }else{\r\n            if(params.user_id ===\"add\"){\r\n                doCreateUser();\r\n            }else{\r\n                doUpdateUser();\r\n            }\r\n        }\r\n    } \r\n\r\n    const doCreateUser = async() => {\r\n        \r\n        const json = await API_POST(\"formUsers/add\",{\r\n            user_name : user_name,\r\n            user_pwd : user_pwd,\r\n            role_name : role_name\r\n            \r\n           \r\n        });\r\n        if(json.result){\r\n            navigate(\"/Admin\", {replace: true});\r\n        }\r\n    }\r\n\r\n    const doUpdateUser = async()=>{\r\n        console.log(\"อัปเดทสำเร็จ\")\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <div className='container-fluid bg-danger'>\r\n                <div className='row'>\r\n                    <div className=\"col-lg-2 content\" style={{padding:\"0\"}}>\r\n                        <Adminnav/>\r\n                    </div>\r\n                    <div className=\"col-lg-10 content\" style={{background : \"#FEA4B0\"}}><br></br>\r\n                            <h1><center>จัดการข้อมูลผู้ใช้</center></h1><br></br>\r\n                            <div className=''>\r\n\r\n                            </div>\r\n                            <Form className='container' noValidate validated={validated} onSubmit={onsave}>\r\n                                <Form.Group controlId='validateUsername'>\r\n                                    <Form.Label>ชื่อผู้ใช้</Form.Label>\r\n                                    <Form.Control\r\n                                        type='text'\r\n                                        value={user_name}\r\n                                        placeholder = \"ชื่อผู้ใช้\"\r\n                                        required\r\n                                        onChange={(e) => setUsername(e.target.value)}\r\n                                    />\r\n                                    <Form.Control.Feedback type=\"invalid\">\r\n                                        กรุณากรอกชื่อผู้ใช้\r\n                                    </Form.Control.Feedback>\r\n                                </Form.Group>\r\n\r\n                                \r\n\r\n                                <Form.Group controlId='validateUserpwd'>\r\n                                    <Form.Label>รหัสผ่าน</Form.Label>\r\n                                    <Form.Control\r\n                                        type='text'\r\n                                        value={user_pwd}\r\n                                        placeholder = \"รหัสผ่าน\"\r\n                                        required\r\n                                        onChange={(e) => setUserpwd(e.target.value)}\r\n                                    />\r\n                                    <Form.Control.Feedback type=\"invalid\">\r\n                                        กรุณากรอกรหัสผ่าน\r\n                                    </Form.Control.Feedback>\r\n                                </Form.Group>\r\n\r\n                                {/* <select value={role_id} onChange={(e) => setRoleid(e.target.value)}>\r\n                                    <option value={0}>ตำแหน่งผู้ใช้</option>\r\n                                    {\r\n                                        role_id.map(item =>(\r\n                                            <option key={item.role_id} value={item.role_id}>{item.role_name}</option>\r\n                                        ))\r\n                                    }\r\n                                </select> */}\r\n\r\n                                <Form.Group controlId='validateRolename'>\r\n                                    <Form.Label>ตำแหน่ง</Form.Label>\r\n                                    <Form.Control\r\n                                        type='text'\r\n                                        value={role_name}\r\n                                        placeholder = \"ผู้ใช้\"\r\n                                        required\r\n                                        onChange={(e) => setRolename(e.target.value)}\r\n                                    />\r\n                                    <Form.Control.Feedback type=\"invalid\">\r\n                                        กรุณากรอกชื่อผู้ใช้\r\n                                    </Form.Control.Feedback>\r\n                                </Form.Group>\r\n                                <Row className='p-3'>\r\n                                    <Button variant=\"success\" as=\"input\" type=\"submit\" value=\"SAVE\"/>\r\n                                </Row>\r\n                                <navigate to=\"Admin\" replace />\r\n                            </Form>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n                            \r\n            </>\r\n    )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}